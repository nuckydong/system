<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gopher.system.dao.mysql.UserDAO">

	<resultMap id="userMap" type="com.gopher.system.model.User">
		<result property="id" column="id" javaType="java.lang.Integer"
			jdbcType="INTEGER" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="createUser" column="create_user"
			javaType="java.lang.Integer" jdbcType="INTEGER" />
		<result property="updateUser" column="update_user"
			javaType="java.lang.Integer" jdbcType="INTEGER" />

		<result property="name" column="name"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="account" column="account"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="password" column="password"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="phone" column="phone"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="wechat" column="wechat"
			javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="userType" column="user_type"
			javaType="java.lang.Integer" jdbcType="INTEGER" />
	</resultMap>


	<update id="update" parameterType="com.gopher.system.model.User">
		UPDATE user
		<set>
			<if test="password != null and password != ''">
				password = #{password},
			</if>
			name = #{name},
			phone = #{phone},
			wechat = #{wechat},
			update_time =now(),
			update_user = #{updateUser}
		</set>
		<where>
			<choose>
				<when test="account != null and account != '' ">
					account = #{account}
				</when>
				<otherwise>
					id = #{id}
				</otherwise>
			</choose>
		</where>

	</update>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.gopher.system.model.User">
		INSERT INTO user
		(name,account,password,phone,wechat,user_type,create_user,update_user,create_time,update_time)
		VALUES
		(#{name},#{account},#{password},#{phone},#{wechat},#{userType},#{createUser},#{updateUser},now(),now())
	</insert>

	<select id="findOne"
		parameterType="com.gopher.system.model.User" resultMap="userMap">
		SELECT * FROM user
		<where>
			<if test="account != null and account!='' ">
				account = #{account}
			</if>
			<if test="id > 0">
				id = #{id}
			</if>
		</where>
	</select>

	<select id="findPage"
		parameterType="com.gopher.system.model.vo.request.UserPageRequst"
		resultMap="userMap">
		SELECT id,name,account,wechat,phone,create_time,update_time,user_type
		FROM user
		<where>
			id != #{currentLoginUser}
			<if test="search != null and search != '' ">
				AND
				(
				name LIKE CONCAT('%',#{search},'%')
				OR account LIKE
				CONCAT('%',#{search},'%')
				OR phone LIKE CONCAT('%',#{search},'%')
				)
			</if>
			<if test="customerId > 0">
				AND id IN (SELECT user_id FROM customer_user WHERE
				customer_id =
				#{customerId})
			</if>
		</where>
		ORDER BY create_time DESC
		LIMIT #{beginIndex},#{pageSize}
	</select>

	<select id="count"
		parameterType="com.gopher.system.model.vo.request.UserPageRequst"
		resultType="java.lang.Integer">
		SELECT COUNT(id) FROM user
		<where>
			id != #{currentLoginUser}
			<if test="search != null and search != '' ">
				AND
				(
				name LIKE CONCAT('%',#{search},'%')
				OR account LIKE
				CONCAT('%',#{search},'%')
				OR phone LIKE CONCAT('%',#{search},'%')
				)
			</if>
			<if test="customerId > 0">
				AND id IN (SELECT user_id FROM customer_user WHERE
				customer_id =
				#{customerId})
			</if>
		</where>
	</select>

	<delete id="delete" parameterType="java.lang.Integer">
		DELETE FROM user WHERE id =
		#{id}
	</delete>

</mapper>